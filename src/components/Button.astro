---
interface Props {
    variant?: keyof typeof Variant;
    size?: keyof typeof Size;
    icon?: string;
    disabled?: boolean;
    label: string;
    onClick?: () => void;
}

const style = 'inline-flex items-center justify-center rounded-md border disabled:cursor-not-allowed disabled:bg-primary-100 disabled:text-primary-400';

const Variant = {
    primary: 'bg-primary-600 text-[#fff] hover:bg-primary-800 active:bg-primary-950 border-primary-600 hover:border-primary-800 active:border-primary-950',
    secondary: 'text-primary-600 hover:text-primary-800 hover:bg-[#F4F4F5] active:text-primary-950',
    filled: 'bg-white text-white text-primary-600 hover:text-primary-800 hover:bg-[#F4F4F5] active:text-primary-950',
}
const Size = {
    small: 'h-9 px-6 text-sm py-2',
    medium: 'h-10 px-8 text-base',
    large: 'h-11 px-8 text-xl',
    bigger: 'h-[58px] px-[38px] text-xl',
}

const { variant, size , label  } = Astro.props;

const array = [style, Variant[variant || 'primary'], Size[size || 'small']];
---

<button class:list={array}>
    {label}
</button>