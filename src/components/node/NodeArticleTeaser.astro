---
import { type FragmentOf, readFragment } from "gql.tada";
import { NodeArticleFragment } from "~/graphql/fragments/node";
import { UserFragment } from "~/graphql/fragments/user";
import { MediaImageFragment } from "~/graphql/fragments/media";
import CoverImage from "../CoverImage.astro";
import Avatar from "../Avatar.astro";

interface Props {
  node: FragmentOf<typeof NodeArticleFragment>;
}

const { node } = Astro.props;

const { title, path, image, author, summary } = readFragment(
  NodeArticleFragment,
  node
);
const authorFragment = readFragment(UserFragment, author);

const picture = readFragment(MediaImageFragment, authorFragment?.picture);
---

<div>
  <div class="mb-5">
    <CoverImage
      title={title}
      path={path}
      image={image}
      width={800}
      height={600}
      styleName="medium"
    />
  </div>
  <h3 class="text-3xl mb-3 leading-snug">
    <a href={path} class="hover:underline">
      {title}
    </a>
  </h3>
  <div class="text-lg mb-4">
    {
      picture && (
        <Avatar name={authorFragment?.name} picture={picture.mediaImage} />
      )
    }
  </div>
  <div class="text-lg mb-4">
    {/* <Date dateString={created} /> */}
  </div>
  <p class="text-lg leading-relaxed mb-4">{summary}</p>
</div>
