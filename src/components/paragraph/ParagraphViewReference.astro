---
import { type FragmentOf, readFragment } from "gql.tada";
import { ParagraphViewReferenceFragment } from "~/graphql/fragments/paragraph";
import BlogTeaser from "../view/BlogTeaser.astro";
import type { NodeArticleTeaserFragment } from "~/graphql/fragments/node";

interface Props {
  paragraph: FragmentOf<typeof ParagraphViewReferenceFragment>;
}

const { paragraph } = Astro.props;

const {
  reference: { view, display, results },
} = readFragment(ParagraphViewReferenceFragment, paragraph);
---

<Fragment>
  {
    view === "blog" && display === "blog_teaser" ? (
      <div class="grid grid-cols-1 md:grid-cols-2 md:gap-x-16 lg:gap-x-32 gap-y-20 md:gap-y-32 mb-32">
        <BlogTeaser
          results={
            results as Array<FragmentOf<typeof NodeArticleTeaserFragment>>
          }
        />
      </div>
    ) : (
      <p>
        <h2>ParagraphViewReference</h2>
        <pre>{JSON.stringify({ view, display, results }, null, 2)}</pre>
      </p>
    )
  }
</Fragment>
