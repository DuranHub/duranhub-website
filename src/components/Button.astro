---
import type { HTMLAttributes } from 'astro/types';

export interface Props extends HTMLAttributes<'button'>{
    variant?: keyof typeof VARIANTS;
    size?: keyof typeof SIZES;
    icon?: string;
    label?: string;
}

const VARIANTS = {
    primary: 'bg-primary-600 text-[#fff] hover:bg-primary-800 active:bg-primary-950 border-primary-600 hover:border-primary-800 active:border-primary-950',
    secondary: 'text-primary-600 hover:text-primary-800 hover:bg-secondary-50 active:text-primary-950',
    filled: 'bg-white text-white text-primary-600 hover:text-primary-800 hover:bg-secondary-50 active:text-primary-950',
}
const SIZES = {
    small: 'h-9 px-6 text-sm py-2',
    medium: 'h-10 px-8 text-base',
    large: 'h-11 px-8 text-xl',
    bigger: 'h-[3.625rem] px-[2.375rem] text-xl',
}

const { variant, size , label , ...rest } = Astro.props;

const variantStyle = VARIANTS[variant || 'primary'];
const SizeStyle = SIZES[size || 'small'];
---

<button class:list={[
    'inline-flex items-center justify-center rounded-md border font-medium disabled:cursor-not-allowed disabled:bg-primary-100 disabled:text-primary-400', 
    variantStyle,
    SizeStyle
    ]} {...rest}>
    {label}
    <slot />
</button>